name: Merge Queue

on:
  pull_request:
    types: [opened, labeled, synchronize, reopened]

jobs:
  check-merge-queue:
    runs-on: ubuntu-latest
    steps:
      - name: Debug - Show Full Event Data
        run: |
          echo: "GitHub Event JSON:"
          echo '${{ toJson(github.event) }}'
          
      - name: Debug - Show PR Labels
        run: |
          echo "PR Labels:"
          echo '${{ toJson(github.event.pull_request.labels) }}'

      - name: Fetch PR Labels
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          PR_NUMBER=${{ github.event.pull_request.number }}
          REPO=${{ github.repository }}

          LABELS_JSON=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
            "https://api.github.com/repos/$REPO/issues/$PR_NUMBER/labels")

          echo "Fetched Labels JSON: $LABELS_JSON"

          LABEL_FOUND=$(echo "$LABELS_JSON" | jq -r '.[].name' | grep -x 'Merge pull request' || true)

          if [[ -z "$LABEL_FOUND" ]]; then
            echo "PR does not have 'Merge pull request' label. Exiting."
            exit 1
          else
            echo "PR has 'Merge pull request' label. Proceeding..."
          fi


  validate-branch:
    needs: check-merge-queue
    runs-on: ubuntu-latest
    if: contains(fromJson('["main", "develop"]'), github.event.pull_request.base.ref)
    steps:
      - name: Run tests and approvals
        run: |
          echo "Running validation checks..."
          # Add actual CI/CD checks here
          echo "Validation passed."

  merge-pr:
    needs: validate-branch
    runs-on: ubuntu-latest
    steps:
      - name: Merge PR
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh pr merge ${{ github.event.pull_request.number }} --merge --auto
